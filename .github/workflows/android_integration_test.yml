name: Integration Test - Android

on:
  workflow_call:
  pull_request:
    paths-ignore:
      - '**.md'
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g
    timeout-minutes: 15
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            api-level: 23
            target: default
            arch: x86
          - os: ubuntu-24.04
            api-level: 24
            target: playstore
            arch: x86
          - os: macos-13
            api-level: 31
            target: default
            arch: x86_64
          - os: ubuntu-24.04
            api-level: 34
            target: aosp_atd
            arch: x86_64
          - os: ubuntu-latest
            api-level: 35
            target: google_apis
            arch: x86_64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 23

      - name: Setup Cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
            ~/.android/debug.keystore
          key: avd-${{ matrix.api-level }}-${{ matrix.os }}-${{ matrix.target }}-${{ matrix.arch }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Setup Flutter
        uses: flutter-actions/setup-flutter@v4

      - name: Install dependencies
        run: flutter pub get

      - name: Enable KVM for linux runners
        if: runner.os == 'Linux'
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Run emulator to generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: ./
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          profile: Galaxy Nexus
          cores: 2
          sdcard-path-or-size: 100M
          avd-name: test
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          working-directory: ./example/
          channel: canary
          script: echo "Generated AVD snapshot for caching."

      - name: Run action
        uses: ./
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          profile: Galaxy Nexus
          cores: 2
          ram-size: 2048M
          sdcard-path-or-size: 100M
          avd-name: test
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          working-directory: ./example/
          channel: canary
          pre-emulator-launch-script: |
            echo "Running pre emulator launch script. Printing the working directory now:"
            pwd
          script: |
            echo $GITHUB_REPOSITORY
            adb devices
            flutter --no-color test --machine -d android integration_test